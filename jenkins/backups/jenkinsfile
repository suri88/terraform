pipeline {

 

    agent any

 

    parameters {

 

        string(name: 'role_account', defaultValue: '',
                description: "Which account would you like to deploy your Backup? Enter the Account Number\n 707783183724:ntw\n762127463824:cicd\n417417470155:sss\n919173928247:talendDev\n977425150090:ReportingDev\n734839700165:CyberArk\n108520179445:Referential-dev\n123097108614:Transparence-Dev\n253634665593:Referential-SIT\n005023280388:Transparence-SIT\n417939946582:Referential-UAT\n665259306775:Transparence-UAT\n646650208476:Referential-Prod\n383767217836:Transparence-Prod\n199624650114:PUP-DEV\n460553977786:PUP-SIT\n595525503433:PUP-UAT\n883143595252:PUP-PROD\n706814884767:SCALA-DEV\n611140932665:SCALA-SIT\n300589781518:SCALA-UAT\n750263846051:SCALA-PROD\n")
        
        string(name: 'role_account_name', defaultValue: '', 
                description: 'Aplication account where you would like to deploy your Backup?.. Example easylog,scala..')


        choice(name: 'app_env_name',
                choices: ['dev','sit','uat','prd'],
                description: 'Which environment name would you like to deploy your Backup?.. Example dev')

 

        choice(name: 'aws_region',
            choices: ['eu-west-3'],
            description: 'Where would you like to deploy your Backup?.. Examples eu-west-1, eu-central-1')

 


        string(name: 'git_branch_name', defaultValue: '', description: 'git branch name')

        choice(name: 'build_option',
            choices: ['','build'],
            description: 'Build will deploy a Backup-vault, backup-plan and resource assignments')


        
    }

 

    environment {

 

        AWS_DEFAULT_REGION = "${params.aws_region}"
        BUILD_OPTION = "${params.build_option}"
        DIR_PATH=""
        Backup_vault=""
        Backup_plan=""
        region_code=""
        backupplanid=""
    }

 

    stages {

 

        stage('Parameters') {

 

            steps {

 

                echo "You have selected account: ${params.role_account}"
                echo "You Selected: ${params.aws_region}"

 

                script {
                        echo "Environment is ${app_env_name}"
                        DIR_PATH = "backups/"
                        
                        if ("${params.aws_region}" == "eu-west-3"){
                        region_code = "par"
                        }else if ("${params.aws_region}" == "eu-west-1"){
                        region_code = "ire"
                        region_code = "${region_code}"
                        }

 

                        Backup_vault = "${region_code}-${role_account_name}-${app_env_name}-backup-vault-001"
                        Backup_plan = "${region_code}-${role_account_name}-${app_env_name}-backup-plan-001"
                    }
            }
        }

 

        stage('Checkout upsa-repo Repository') {

 

            steps {

 

                git branch: "${git_branch_name}",
                    credentialsId: 'gitlab-cred-id',
                    url: 'https://gitlab.dev.upsa.cf/Yomi.Ogunyinka/upsa-repos.git'
            }
        }

 

        stage('Build Phase: build') {

 

            when {

 

                expression {

 

                    params.build_option == 'build'

 

                    }
                }

 

            steps {

 

                    withCredentials(
                        [
                            string(credentialsId: 'ExternalId', variable: 'external_id')
                        ]
                    )

 

                        {
                            echo "Applying AWS Credentials!.."

 

                    withAWS(credentials: 'aws-credentials',
                            region: "${params.aws_region}",
                            role:'jenkins',
                            roleAccount:"${params.role_account}",
                            externalId: "$external_id",
                            duration: 900,
                            roleSessionName: 'jenkins-session')
                        {
                            echo "This will be deployed into account ${params.role_account}"
                            echo "This will be deployed into the ${params.aws_region} region"

 

                            dir ("${DIR_PATH}")

 

                        { script {
                            def backupplanid=""
                            sh """
                            sed -i "s/VAR-ACCOUNT/${role_account}/g" backup-selection.json
                            sed -i "s/VAR-BACKUP-PLAN-NAME/\\$Backup_plan/g" backup-plan.json
                            sed -i "s/VAR-VAULT-NAME/\\$Backup_vault/g" backup-plan.json
                            aws backup create-backup-vault --backup-vault-name $Backup_vault
                            aws backup create-backup-plan --backup-plan file://backup-plan.json
							backupplanid=`aws backup list-backup-plans --query 'BackupPlansList[0].BackupPlanId' --output text`
                            echo \$backupplanid
							aws backup create-backup-selection --backup-plan-id \$backupplanid --backup-selection file://backup-selection.json
                            """

                        }

                        }
                    }
                }
            }
        }
       

 

    }
}
 
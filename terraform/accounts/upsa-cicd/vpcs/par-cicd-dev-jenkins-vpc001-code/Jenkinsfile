pipeline {
    
    agent any

    parameters {

        choice(name: 'role_account',
            choices: ['','707783183724', '762127463824', '417417470155'],
            description: 'Which account would you like to deploy your VPC?.. Example 1234567890')

        choice(name: 'aws_region', 
            choices: ['eu-west-3','eu-central-1', 'eu-west-1', 'eu-west-2', 'eu-north-1', 'us-east-1'], 
            description: 'Where would you like to deploy your VPC?.. Examples eu-west-1, eu-central-1')
    
        choice(name: 'build_option', 
            choices: ['','apply', 'destroy','plan'], 
            description: 'Apply will deploy a VPC, and Destroy will remove the VPC..')

        choice(name: 'env_variables', 
            choices: ['paris','dublin', 'london','frankfurt'], 
            description: 'Please select the variable file to apply.. Examples london, paris')
    }

    environment {

        AWS_DEFAULT_REGION = "${params.aws_region}"
        BUILD_OPTION = "${params.build_option}"
        TF_HOME = tool('terraform-0.12.12')
        TF_IN_AUTOMATION = "true"
        PATH = "$TF_HOME:$PATH"   
    }

    stages {

        stage('Parameters') {

            steps {

                echo "You have selected account: ${params.role_account}"
                echo "You Selected: ${params.aws_region}"   
            }
        }

        stage('Checkout upsa-repo Repository') {

            steps {

                git branch: 'development',
                    credentialsId: '6388c0c1-70f9-4008-8938-7aa750416761',
                    url: 'https://gitlab.dev.upsa.cf/Yomi.Ogunyinka/upsa-repos.git'
            }
        }

        stage('Build Phase: Plan') {

            when {

                expression {

                    params.build_option == 'plan'
                    
                    }
                }

            steps {

                    withCredentials(
                        [
                            string(credentialsId: 'ExternalId', variable: 'external_id')
                        ]
                    )

                        {
                            echo "Applying AWS Credentials!.."

                    withAWS(credentials: 'aws-credentials',
                            region: "${params.aws_region}",
                            role:'jenkins',
                            roleAccount:"${params.role_account}", 
                            externalId: "$external_id", 
                            duration: 900, 
                            roleSessionName: 'jenkins-session')
                        {
                            echo "This will be deployed into account ${params.role_account}"
                            echo "This will be deployed into the ${params.aws_region} region"

                            dir ('terraform/accounts/upsa-cicd/vpcs/par-cicd-dev-jenkins-vpc001-code')

                        {
                            sh "terraform -version"
                            sh "terraform init"
                            sh "terraform get"
                            sh 'terraform ${build_option} -var="region=${aws_region}" \
                                -var-file="${env_variables}".tfvars'                        
                        }                       
                    }        
                }
            }
        }
        stage('Build Phase: Apply') {

            when {

                expression {

                    params.build_option == 'apply'
                    
                    }
                }

            steps {

                    withCredentials(
                        [
                            string(credentialsId: 'ExternalId', variable: 'external_id')
                        ]
                    )

                        {
                            echo "Applying AWS Credentials!.."

                    withAWS(credentials: 'aws-credentials',
                            region: "${params.aws_region}",
                            role:'jenkins',
                            roleAccount:"${params.role_account}", 
                            externalId: "$external_id", 
                            duration: 900, 
                            roleSessionName: 'jenkins-session')
                        {
                            echo "This will be deployed into account ${params.role_account}"
                            echo "This will be deployed into the ${params.aws_region} region"

                            dir ('terraform/accounts/upsa-cicd/vpcs/par-cicd-dev-jenkins-vpc001-code')

                        {
                            sh "terraform -version"
                            sh "terraform init"
                            sh "terraform get"
                            sh 'terraform ${build_option} -var="region=${aws_region}" \
                                -var-file=${env_variables}.tfvars -auto-approve'                        
                        }                       
                    }        
                }
            }
        }
         stage('Build Phase: Destroy') {

            when {

                expression {

                    params.build_option == 'destroy'
                    
                    }
                }

            steps {

                    withCredentials(
                        [
                            string(credentialsId: 'ExternalId', variable: 'external_id')
                        ]
                    )

                        {
                            echo "Applying AWS Credentials!.."

                    withAWS(credentials: 'aws-credentials',
                            region: "${params.aws_region}",
                            role:'jenkins',
                            roleAccount:"${params.role_account}", 
                            externalId: "$external_id", 
                            duration: 900, 
                            roleSessionName: 'jenkins-session')
                        {
                            echo "This will be deployed into account ${params.role_account}"
                            echo "This will be deployed into the ${params.aws_region} region"

                            dir ('terraform/accounts/upsa-cicd/vpcs/par-cicd-dev-jenkins-vpc001-code')

                        {
                            sh "terraform -version"
                            sh "terraform init"
                            sh "terraform get"
                            sh 'terraform ${build_option} -var="region=${aws_region}" \
                                -var-file=${env_variables}.tfvars -auto-approve'                        
                        }                       
                    }        
                }
            }
        }              
    }
}